/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopmanagementsystem;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Sultan
 */
public class ProductUpdateDeleteForm extends javax.swing.JFrame {

    /**
     * Creates new form ProductUpdateForm
     */
    static Connection c = null;
    static Statement s = null;
    static ResultSet rs = null;

    public static void populate() {
        try {
            s = c.createStatement();
            rs = s.executeQuery("SELECT * FROM product ORDER BY productName ASC");
            while (rs.next()) {
                String productName1 = rs.getString("productName");
                ProductUpdateDeleteForm.productSelector.addItem(productName1);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                s.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

    public static void depopulate() {
        try {
            s = c.createStatement();
            rs = s.executeQuery("SELECT * FROM product");
            while (rs.next()) {
                String productName1 = rs.getString("productName");
                ProductUpdateDeleteForm.productSelector.removeItem(productName1);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                s.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }
    int productID1 = 0;

    public ProductUpdateDeleteForm() {
        initComponents();
        c = DB.java_db();

        AutoCompleteDecorator.decorate(productSelector);

        populate();

        //Setting error msgs & current values labels to null
        error1.setText("");
        error2.setText("");
        error3.setText("");
        error4.setText("");
        error5.setText("");
        error6.setText("");
        error7.setText("");
        error8.setText("");
        error9.setText("");
        error10.setText("");
        productID.setText("");
        productNameLabel.setText("");
        hsnLabel.setText("");
        measuringUnitLabel.setText("");
        gstLabel.setText("");
        purchaseRateLabel.setText("");
        basicPurchaseRateLabel.setText("");
        basicSaleRateLabel.setText("");
        saleRateLabel.setText("");
        safetyStockLabel.setText("");
        quantityLabel.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        productSelector = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        hsnLabel = new javax.swing.JLabel();
        measuringUnitLabel = new javax.swing.JLabel();
        gstLabel = new javax.swing.JLabel();
        purchaseRateLabel = new javax.swing.JLabel();
        basicPurchaseRateLabel = new javax.swing.JLabel();
        basicSaleRateLabel = new javax.swing.JLabel();
        saleRateLabel = new javax.swing.JLabel();
        safetyStockLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        hsn = new javax.swing.JTextField();
        measuringUnit = new javax.swing.JComboBox<>();
        gst = new javax.swing.JComboBox<>();
        purchaseRate = new javax.swing.JTextField();
        basicPurchaseRate = new javax.swing.JTextField();
        basicSaleRate = new javax.swing.JTextField();
        saleRate = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        error1 = new javax.swing.JLabel();
        error2 = new javax.swing.JLabel();
        error3 = new javax.swing.JLabel();
        error4 = new javax.swing.JLabel();
        error5 = new javax.swing.JLabel();
        error6 = new javax.swing.JLabel();
        error7 = new javax.swing.JLabel();
        error8 = new javax.swing.JLabel();
        error9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        safetyStock = new javax.swing.JSpinner();
        quantity = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        productNameLabel = new javax.swing.JLabel();
        productName = new javax.swing.JTextField();
        error10 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        productID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("UPDATE/DELETE PRODUCT");
        setAlwaysOnTop(true);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(138, 43, 226));
        jLabel1.setText("Product Name :");

        jLabel2.setForeground(new java.awt.Color(138, 43, 226));
        jLabel2.setText("HSN SAC :");

        jLabel3.setForeground(new java.awt.Color(138, 43, 226));
        jLabel3.setText("Measuring Unit :");

        jLabel4.setForeground(new java.awt.Color(138, 43, 226));
        jLabel4.setText("GST % :");

        jLabel5.setForeground(new java.awt.Color(138, 43, 226));
        jLabel5.setText("Purchase Rate/Unit :");

        jLabel6.setForeground(new java.awt.Color(138, 43, 226));
        jLabel6.setText("<html>Purchase Rate/Unit :<br/>(Without GST)</html>");

        jLabel7.setForeground(new java.awt.Color(138, 43, 226));
        jLabel7.setText("<html>Sale Rate/Unit :<br/>(Without GST)</html>");

        jLabel8.setForeground(new java.awt.Color(138, 43, 226));
        jLabel8.setText("Sale Rate/Unit :");

        jLabel9.setForeground(new java.awt.Color(138, 43, 226));
        jLabel9.setText("Safety Stock :");

        jLabel10.setForeground(new java.awt.Color(138, 43, 226));
        jLabel10.setText("Quantity :");

        productSelector.setEditable(true);
        productSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        productSelector.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                productSelectorItemStateChanged(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 153, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Current Values");

        hsnLabel.setForeground(new java.awt.Color(0, 153, 255));
        hsnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hsnLabel.setText("hsnLabel");

        measuringUnitLabel.setForeground(new java.awt.Color(0, 153, 255));
        measuringUnitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        measuringUnitLabel.setText("measuringUnitLabel");

        gstLabel.setForeground(new java.awt.Color(0, 153, 255));
        gstLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gstLabel.setText("gstLabel");

        purchaseRateLabel.setForeground(new java.awt.Color(0, 153, 255));
        purchaseRateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        purchaseRateLabel.setText("purchaseRateLabel");

        basicPurchaseRateLabel.setForeground(new java.awt.Color(0, 153, 255));
        basicPurchaseRateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        basicPurchaseRateLabel.setText("basicPurchaseRateLabel");

        basicSaleRateLabel.setForeground(new java.awt.Color(0, 153, 255));
        basicSaleRateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        basicSaleRateLabel.setText("basicSaleRateLabel");

        saleRateLabel.setForeground(new java.awt.Color(0, 153, 255));
        saleRateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        saleRateLabel.setText("saleRateLabel");

        safetyStockLabel.setForeground(new java.awt.Color(0, 153, 255));
        safetyStockLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        safetyStockLabel.setText("safetyStockLabel");

        quantityLabel.setForeground(new java.awt.Color(0, 153, 255));
        quantityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantityLabel.setText("quantityLabel");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 153, 153));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Values To Be Updated");

        hsn.setEnabled(false);
        hsn.setFocusable(false);
        hsn.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                hsnCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        measuringUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bag", "Box", "Brass", "Bundle", "Cu. Ft.", "Doz.", "Foot", "Kg.", "Litre.", "m2", "m3", "Mtr.", "Nos.", "Pouch", "Sq. Ft.", "Ton", "rmt" }));
        measuringUnit.setEnabled(false);
        measuringUnit.setFocusable(false);

        gst.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "12", "14", "18", "28" }));
        gst.setEnabled(false);
        gst.setFocusable(false);
        gst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                gstItemStateChanged(evt);
            }
        });

        purchaseRate.setEnabled(false);
        purchaseRate.setFocusable(false);
        purchaseRate.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                purchaseRateCaretUpdate(evt);
            }
        });

        basicPurchaseRate.setEnabled(false);
        basicPurchaseRate.setFocusable(false);

        basicSaleRate.setEnabled(false);
        basicSaleRate.setFocusable(false);

        saleRate.setEnabled(false);
        saleRate.setFocusable(false);
        saleRate.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                saleRateCaretUpdate(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(219, 112, 147));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(219, 112, 147));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        error1.setForeground(new java.awt.Color(255, 0, 0));
        error1.setText("error1");
        error1.setFocusable(false);

        error2.setForeground(new java.awt.Color(255, 0, 0));
        error2.setText("error2");
        error2.setFocusable(false);

        error3.setForeground(new java.awt.Color(255, 0, 0));
        error3.setText("error3");
        error3.setFocusable(false);

        error4.setForeground(new java.awt.Color(255, 0, 0));
        error4.setText("error4");
        error4.setFocusable(false);

        error5.setForeground(new java.awt.Color(255, 0, 0));
        error5.setText("error5");
        error5.setFocusable(false);

        error6.setForeground(new java.awt.Color(255, 0, 0));
        error6.setText("error6");
        error6.setFocusable(false);

        error7.setForeground(new java.awt.Color(255, 0, 0));
        error7.setText("error7");
        error7.setFocusable(false);

        error8.setForeground(new java.awt.Color(255, 0, 0));
        error8.setText("error8");
        error8.setFocusable(false);

        error9.setForeground(new java.awt.Color(255, 0, 0));
        error9.setText("error9");
        error9.setFocusable(false);

        jLabel12.setText("Rs.");

        jLabel13.setText("Rs.");

        jLabel14.setText("Rs.");

        jLabel15.setText("Rs.");

        deleteButton.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(219, 112, 147));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        safetyStock.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        safetyStock.setEnabled(false);
        safetyStock.setFocusable(false);

        quantity.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        quantity.setEnabled(false);
        quantity.setFocusable(false);

        jLabel16.setForeground(new java.awt.Color(138, 43, 226));
        jLabel16.setText("Product Name :");

        productNameLabel.setForeground(new java.awt.Color(0, 153, 255));
        productNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        productNameLabel.setText("productNameLabel");

        productName.setEnabled(false);
        productName.setFocusable(false);
        productName.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                productNameCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        error10.setForeground(new java.awt.Color(255, 0, 0));
        error10.setText("error10");

        jLabel17.setForeground(new java.awt.Color(138, 43, 226));
        jLabel17.setText("ID :");

        productID.setForeground(new java.awt.Color(138, 43, 226));
        productID.setText("productID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addComponent(jSeparator2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(productSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(35, 35, 35)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(measuringUnitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(35, 35, 35)
                                                .addComponent(measuringUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(error3))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(hsnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                                    .addComponent(productNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                                                .addGap(35, 35, 35)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(hsn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(productName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(error2)
                                                    .addComponent(error1)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(gstLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(35, 35, 35)
                                                        .addComponent(gst, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addComponent(basicSaleRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(35, 35, 35)
                                                                .addComponent(basicSaleRate))
                                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addComponent(basicPurchaseRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(35, 35, 35)
                                                                .addComponent(basicPurchaseRate))
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(purchaseRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(35, 35, 35)
                                                                .addComponent(purchaseRate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addComponent(saleRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(35, 35, 35)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(saleRate)
                                                                    .addComponent(safetyStock)
                                                                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addComponent(safetyStockLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(quantityLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(error5)
                                                    .addComponent(error4)
                                                    .addComponent(error6)
                                                    .addComponent(error7)
                                                    .addComponent(error8)
                                                    .addComponent(error9)
                                                    .addComponent(error10)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(200, 200, 200)
                                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(200, 200, 200)
                                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 162, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(productID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(224, 224, 224)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(productSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel21)
                    .addComponent(jLabel17)
                    .addComponent(productID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(error1)
                    .addComponent(jLabel16)
                    .addComponent(productNameLabel)
                    .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hsnLabel)
                        .addComponent(hsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(error2)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(measuringUnitLabel)
                    .addComponent(jLabel3)
                    .addComponent(measuringUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gstLabel)
                    .addComponent(jLabel4)
                    .addComponent(gst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purchaseRateLabel)
                    .addComponent(jLabel5)
                    .addComponent(purchaseRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(error5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(basicPurchaseRateLabel)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(basicPurchaseRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(error6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(basicSaleRateLabel)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(basicSaleRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(error7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saleRateLabel)
                    .addComponent(jLabel8)
                    .addComponent(saleRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(error8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(safetyStockLabel)
                    .addComponent(jLabel9)
                    .addComponent(safetyStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quantityLabel)
                    .addComponent(jLabel10)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error10))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void productSelectorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_productSelectorItemStateChanged
        // TODO add your handling code here:
        productNameLabel.setText("");
        hsnLabel.setText("");
        measuringUnitLabel.setText("");
        measuringUnit.setSelectedItem("Kg.");
        gstLabel.setText("");
        purchaseRateLabel.setText("");
        basicPurchaseRateLabel.setText("");
        basicSaleRateLabel.setText("");
        saleRateLabel.setText("");
        safetyStockLabel.setText("");
        quantityLabel.setText("");
        productName.setText("");
        hsn.setText("");
        gst.setSelectedItem("0");
        purchaseRate.setText("");
        basicPurchaseRate.setText("");
        basicSaleRate.setText("");
        saleRate.setText("");
        safetyStock.setValue(0);
        quantity.setValue(0);
        error4.setText("");
        String productName1 = ProductUpdateDeleteForm.productSelector.getSelectedItem().toString();
        if (!productName1.equals(" ") && !productName1.equals("")) {
            productName.setEnabled(true);
            hsn.setEnabled(true);
            measuringUnit.setEnabled(true);
            gst.setEnabled(true);
            purchaseRate.setEnabled(true);
            saleRate.setEnabled(true);
            safetyStock.setEnabled(true);
            quantity.setEnabled(true);

            productName.setFocusable(true);
            hsn.setFocusable(true);
            measuringUnit.setFocusable(true);
            gst.setFocusable(true);
            purchaseRate.setFocusable(true);
            saleRate.setFocusable(true);
            safetyStock.setFocusable(true);
            quantity.setFocusable(true);
            try {
                s = c.createStatement();
                String sql = "SELECT * FROM product WHERE productName='" + productName1 + "'";
                rs = s.executeQuery(sql);
                String productNameLabel1, hsnLabel1, measuringUnitLabel1, gstLabel1, purchaseRateLabel1,
                        basicPurchaseRateLabel1, basicSaleRateLabel1, saleRateLabel1,
                        safetyStockLabel1, quantityLabel1;
                productNameLabel1 = hsnLabel1 = measuringUnitLabel1 = gstLabel1 = purchaseRateLabel1
                        = basicPurchaseRateLabel1 = basicSaleRateLabel1 = saleRateLabel1
                        = safetyStockLabel1 = quantityLabel1 = "";
                int safetyStockSpinner = 0;
                int quantitySpinner = 0;
                while (rs.next()) {
                    productID1 = rs.getInt("productID");
                    productNameLabel1 = rs.getString("productName");
                    hsnLabel1 = rs.getString("hsn");
                    measuringUnitLabel1 = rs.getString("measuringUnit");
                    gstLabel1 = rs.getString("gst");
                    purchaseRateLabel1 = rs.getString("purchaseRate");
                    basicPurchaseRateLabel1 = rs.getString("basicPurchaseRate");
                    basicSaleRateLabel1 = rs.getString("basicSaleRate");
                    saleRateLabel1 = rs.getString("saleRate");
                    safetyStockLabel1 = String.valueOf(rs.getInt("safetyStock"));
                    quantityLabel1 = String.valueOf(rs.getInt("quantity"));
                    safetyStockSpinner = rs.getInt("safetyStock");
                    quantitySpinner = rs.getInt("quantity");
                }
                productID.setText(String.valueOf(productID1));
                productNameLabel.setText(productNameLabel1);
                hsnLabel.setText(hsnLabel1);
                measuringUnitLabel.setText(measuringUnitLabel1);
                measuringUnit.setSelectedItem(measuringUnitLabel1);
                gstLabel.setText(gstLabel1);
                gst.setSelectedItem(gstLabel1);
                purchaseRateLabel.setText(purchaseRateLabel1);
                purchaseRate.setText(purchaseRateLabel1);
                basicPurchaseRateLabel.setText(basicPurchaseRateLabel1);
                basicPurchaseRate.setText(basicPurchaseRateLabel1);
                basicSaleRateLabel.setText(basicSaleRateLabel1);
                basicSaleRate.setText(basicSaleRateLabel1);
                saleRateLabel.setText(saleRateLabel1);
                saleRate.setText(saleRateLabel1);
                safetyStockLabel.setText(safetyStockLabel1);
                quantityLabel.setText(quantityLabel1);
                safetyStock.setValue(safetyStockSpinner);
                quantity.setValue(quantitySpinner);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e);
            } finally {
                try {
                    rs.close();
                    s.close();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, e);
                }
            }
        } else {
            productID.setText("");
            productName.setEnabled(false);
            hsn.setEnabled(false);
            measuringUnit.setEnabled(false);
            gst.setEnabled(false);
            purchaseRate.setEnabled(false);
            saleRate.setEnabled(false);
            safetyStock.setEnabled(false);
            quantity.setEnabled(false);

            productName.setFocusable(false);
            hsn.setFocusable(false);
            measuringUnit.setFocusable(false);
            gst.setFocusable(false);
            purchaseRate.setFocusable(false);
            saleRate.setFocusable(false);
            safetyStock.setFocusable(false);
            quantity.setFocusable(false);
        }
    }//GEN-LAST:event_productSelectorItemStateChanged

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String productName1 = ProductUpdateDeleteForm.productSelector.getSelectedItem().toString();
        if (productName1.equals(" ")) {
            JOptionPane.showMessageDialog(this, "No Product Selected!");
        } else {
            int ans = JOptionPane.showConfirmDialog(this, "Delete Product : " + productName1 + "?", "Product Deletion", JOptionPane.YES_NO_OPTION);
            if (ans == 0) {
                try {
                    s = c.createStatement();
                    String sql = "DELETE FROM product WHERE productID=" + productID1;
                    s.executeUpdate(sql);
                    JOptionPane.showMessageDialog(this, "Product '" + productName1 + "' Deleted!");
                    c.close();
                    new ProductUpdateDeleteForm().setVisible(true);
                    this.dispose();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, e);
                } finally {
                    try {
                        s.close();
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(this, e);
                    }
                }
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        String productSelector1 = ProductUpdateDeleteForm.productSelector.getSelectedItem().toString();
        String measuringUnitLabel1 = this.measuringUnitLabel.getText();
        String gstLabel1 = this.gstLabel.getText();
        String purchaseRateLabel1 = this.purchaseRateLabel.getText();
        String basicPurchaseRateLabel1 = this.basicPurchaseRateLabel.getText();
        String basicSaleRateLabel1 = this.basicSaleRateLabel.getText();
        String saleRateLabel1 = this.saleRateLabel.getText();
        String safetyStockLabel1 = this.safetyStockLabel.getText();
        String quanityLabel1 = this.quantityLabel.getText();
        if (productSelector1.equals("") || productSelector1.equals(" ")) {
            productID.setText("");
        } else {
            productName.setText("");
            hsn.setText("");
            measuringUnit.setSelectedItem(measuringUnitLabel1);
            gst.setSelectedItem(gstLabel1);
            purchaseRate.setText(purchaseRateLabel1);
            basicPurchaseRate.setText(basicPurchaseRateLabel1);
            basicSaleRate.setText(basicSaleRateLabel1);
            saleRate.setText(saleRateLabel1);
            safetyStock.setValue(Integer.parseInt(safetyStockLabel1));
            quantity.setValue(Integer.parseInt(quanityLabel1));
            error1.setText("");
            error2.setText("");
            error3.setText("");
            error4.setText("");
            error5.setText("");
            error6.setText("");
            error7.setText("");
            error8.setText("");
            error9.setText("");
            error10.setText("");
        }
    }//GEN-LAST:event_clearButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String productName1 = this.productName.getText();
        String hsn1 = this.hsn.getText();
        String measuringUnit1 = this.measuringUnit.getSelectedItem().toString();
        String gst1 = this.gst.getSelectedItem().toString();
        String purchaseRate1 = this.purchaseRate.getText();
        String basicPurchaseRate1 = this.basicPurchaseRate.getText();
        String basicSaleRate1 = this.basicSaleRate.getText();
        String saleRate1 = this.saleRate.getText();
        String safetyStock1 = this.safetyStock.getValue().toString();
        String quantity1 = this.quantity.getValue().toString();

        //Setting all error msg to null
        error1.setText("");
        error2.setText("");
        error3.setText("");
        error4.setText("");
        error5.setText("");
        error6.setText("");
        error7.setText("");
        error8.setText("");
        error9.setText("");
        error10.setText("");

        //Regular expression validations
        int regFlag;
        int regFlag1, regFlag2, regFlag3;

        Pattern hsnPattern = Pattern.compile("^[0-9.]*$|^$");
        Pattern costPattern = Pattern.compile("^[0-9][0-9.]*$|^$");
        Matcher hsnMatcher = hsnPattern.matcher(hsn1);
        if (!hsnMatcher.matches()) {
            error2.setText("Invalid HSN SAC!");
            regFlag1 = 1;
        } else {
            regFlag1 = 0;
        }
        Matcher purchaseRateMatcher = costPattern.matcher(purchaseRate1);
        if (!purchaseRateMatcher.matches()) {
            error5.setText("Invalid Amount!");
            regFlag2 = 1;
        } else {
            regFlag2 = 0;
        }
        Matcher saleRateMatcher = costPattern.matcher(saleRate1);
        if (!saleRateMatcher.matches()) {
            error8.setText("Invalid Amount!");
            regFlag3 = 1;
        } else {
            regFlag3 = 0;
        }
        if (regFlag1 == 1 || regFlag2 == 1 || regFlag3 == 1) {
            regFlag = 1;
        } else {
            regFlag = 0;
        }

        //Duplicate entries validations for unique values
        int dupFlag = 0;
        try {
            s = c.createStatement();
            String sql = "SELECT * FROM product";
            rs = s.executeQuery(sql);
            while (rs.next()) {
                String productName2 = rs.getString("productName");
                if (productName1.equalsIgnoreCase(productName2)) {
                    error1.setText("Product Name Already Exists!");
                    dupFlag = 1;
                    break;
                } else {
                    dupFlag = 0;
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        } finally {
            try {
                rs.close();
                s.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }

        //If no field is filled then it will display error msg
        int reqFlag1;
        int reqFlag2;
        String productSelector1 = ProductUpdateDeleteForm.productSelector.getSelectedItem().toString();
        if (productSelector1.equals(" ") || productSelector1.equals("")) {
            reqFlag1 = 1;
            JOptionPane.showMessageDialog(this, "Select a product & change some values first!");
        } else {
            reqFlag1 = 0;
        }
        String measuringUnitLabel1 = this.measuringUnitLabel.getText();
        String gstLabel1 = this.gstLabel.getText();
        String purchaseRateLabel1 = this.purchaseRateLabel.getText();
        String saleRateLabel1 = this.saleRateLabel.getText();
        String safetyStockLabel1 = this.safetyStockLabel.getText();
        String quantityLabel1 = this.quantityLabel.getText();
        if (!(productSelector1.equals(" ") || productSelector1.equals("")) && productName1.equals("") && hsn1.equals("")
                && measuringUnit1.equals(measuringUnitLabel1) && gst1.equals(gstLabel1) && purchaseRate1.equals(purchaseRateLabel1)
                && saleRate1.equals(saleRateLabel1) && safetyStock1.equals(safetyStockLabel1)
                && quantity1.equals(quantityLabel1)) {
            reqFlag2 = 1;
            JOptionPane.showMessageDialog(this, "You have not entered any values to be updated!");
        } else {
            reqFlag2 = 0;
        }

        //Updating data in database only if all the flags are 0
        if (dupFlag == 0 && regFlag == 0 && reqFlag1 == 0 && reqFlag2 == 0) {
            int ans = JOptionPane.showConfirmDialog(this, "Update Product?", "Product Updation", JOptionPane.YES_NO_OPTION);
            if (ans == 0) {
                try {
                    s = c.createStatement();
                    if (!productName1.equals("")) {
                        s.executeUpdate("UPDATE product SET productName='" + productName1 + "' WHERE productID=" + productID1);
                        depopulate();
                        ProductUpdateDeleteForm.productSelector.removeItem(this.productNameLabel.getText());
                        populate();
                        ProductUpdateDeleteForm.productSelector.setSelectedItem(productName1);
                    }
                    if (!hsn1.equals("")) {
                        s.executeUpdate("UPDATE product SET hsn='" + hsn1 + "' WHERE productID=" + productID1);
                    }
                    if (!measuringUnit1.equals(" ")) {
                        s.executeUpdate("UPDATE product SET measuringUnit='" + measuringUnit1 + "' WHERE productID=" + productID1);
                    }
                    if (!gst1.equals(" ")) {
                        s.executeUpdate("UPDATE product SET gst='" + gst1 + "' WHERE productID=" + productID1);
                    }
                    if (!purchaseRate1.equals("")) {
                        s.executeUpdate("UPDATE product SET purchaseRate='" + purchaseRate1 + "' WHERE productID=" + productID1);
                    }
                    if (!basicPurchaseRate1.equals("")) {
                        s.executeUpdate("UPDATE product SET basicPurchaseRate='" + basicPurchaseRate1 + "' WHERE productID=" + productID1);
                    }
                    if (!basicSaleRate1.equals("")) {
                        s.executeUpdate("UPDATE product SET basicSaleRate='" + basicSaleRate1 + "' WHERE productID=" + productID1);
                    }
                    if (!saleRate1.equals("")) {
                        s.executeUpdate("UPDATE product SET saleRate='" + saleRate1 + "' WHERE productID=" + productID1);
                    }
                    if (!safetyStock1.equals("")) {
                        s.executeUpdate("UPDATE product SET safetyStock=" + safetyStock1 + " WHERE productID=" + productID1);
                    }
                    if (!quantity1.equals("")) {
                        s.executeUpdate("UPDATE product SET quantity=" + quantity1 + " WHERE productID=" + productID1);
                    }
                    JOptionPane.showMessageDialog(this, "Product Updated!");
                    rs = s.executeQuery("SELECT * FROM product WHERE productID=" + productID1);
                    while (rs.next()) {
                        String productSelected = rs.getString("productName");
                        ProductUpdateDeleteForm.productSelector.setSelectedIndex(0);
                        ProductUpdateDeleteForm.productSelector.setSelectedItem(productSelected);
                    }
                } catch (HeadlessException | SQLException e) {
                    JOptionPane.showMessageDialog(this, e);
                } finally {
                    try {
                        rs.close();
                        s.close();
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(this, e);
                    }
                }
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void productNameCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_productNameCaretPositionChanged
        // TODO add your handling code here:
        error1.setText("");
    }//GEN-LAST:event_productNameCaretPositionChanged

    private void hsnCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_hsnCaretPositionChanged
        // TODO add your handling code here:
        error2.setText("");
    }//GEN-LAST:event_hsnCaretPositionChanged

    private void gstItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_gstItemStateChanged
        // TODO add your handling code here:
        String item = this.gst.getSelectedItem().toString();
        if (!item.equals(" ")) {
            error4.setText("");
            String purchaseRate1 = this.purchaseRate.getText();
            String saleRate1 = this.saleRate.getText();
            Pattern costPattern = Pattern.compile("^[1-9][0-9.]*$|^$");
            Matcher purchaseRateMatcher = costPattern.matcher(purchaseRate1);
            if (!purchaseRate1.equals("") && purchaseRateMatcher.matches()) {
                double n1 = Double.parseDouble(purchaseRate1);
                double n2 = 1 + (Double.parseDouble(item) / 100);
                double n3 = n1 / n2;
                String tax = String.valueOf(n3);
                basicPurchaseRate.setText(tax);
            }
            Matcher saleRateMatcher = costPattern.matcher(saleRate1);
            if (!saleRate1.equals("") && saleRateMatcher.matches()) {
                double n1 = Double.parseDouble(saleRate1);
                double n2 = 1 + (Double.parseDouble(item) / 100);
                double n3 = n1 / n2;
                String tax = String.valueOf(n3);
                basicSaleRate.setText(tax);
            }
        } else {
            error4.setText("GST % Required!");
            basicPurchaseRate.setText("");
            basicSaleRate.setText("");
        }
    }//GEN-LAST:event_gstItemStateChanged

    private void purchaseRateCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_purchaseRateCaretUpdate
        // TODO add your handling code here:
        String purchaseRate1 = this.purchaseRate.getText();
        error5.setText("");
        Pattern costPattern = Pattern.compile("^[0-9][0-9.]*$|^$");
        Matcher purchaseRateMatcher = costPattern.matcher(purchaseRate1);
        if (purchaseRate1.equals("")) {
            basicPurchaseRate.setText("");
        }
        if (!purchaseRateMatcher.matches()) {
            error5.setText("Invalid Amount!");
        }
        if (!purchaseRate1.equals("") && purchaseRateMatcher.matches()) {
            String gst1 = this.gst.getSelectedItem().toString();
            if (!gst1.equals(" ")) {
                error6.setText("");
                double n1 = Double.parseDouble(purchaseRate1);
                double n2 = 1 + (Double.parseDouble(gst1) / 100);
                double n3 = n1 / n2;
                String tax = String.valueOf(n3);
                basicPurchaseRate.setText(tax);
            }
        }
    }//GEN-LAST:event_purchaseRateCaretUpdate

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try {
            // Will dispose this form
            c.close();
            this.dispose();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_formWindowClosing

    private void saleRateCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_saleRateCaretUpdate
        // TODO add your handling code here:
        String saleRate1 = this.saleRate.getText();
        error8.setText("");
        Pattern costPattern = Pattern.compile("^[0-9][0-9.]*$|^$");
        Matcher saleRateMatcher = costPattern.matcher(saleRate1);
        if (saleRate1.equals("")) {
            basicSaleRate.setText("");
        }
        if (!saleRateMatcher.matches()) {
            error8.setText("Invalid Amount!");
        }
        if (!saleRate1.equals("") && saleRateMatcher.matches()) {
            String gst1 = this.gst.getSelectedItem().toString();
            if (!gst1.equals(" ")) {
                error7.setText("");
                double n1 = Double.parseDouble(saleRate1);
                double n2 = 1 + (Double.parseDouble(gst1) / 100);
                double n3 = n1 / n2;
                String tax = String.valueOf(n3);
                basicSaleRate.setText(tax);
            }
        }
    }//GEN-LAST:event_saleRateCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductUpdateDeleteForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField basicPurchaseRate;
    private javax.swing.JLabel basicPurchaseRateLabel;
    private javax.swing.JTextField basicSaleRate;
    private javax.swing.JLabel basicSaleRateLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel error1;
    private javax.swing.JLabel error10;
    private javax.swing.JLabel error2;
    private javax.swing.JLabel error3;
    private javax.swing.JLabel error4;
    private javax.swing.JLabel error5;
    private javax.swing.JLabel error6;
    private javax.swing.JLabel error7;
    private javax.swing.JLabel error8;
    private javax.swing.JLabel error9;
    private javax.swing.JComboBox<String> gst;
    private javax.swing.JLabel gstLabel;
    private javax.swing.JTextField hsn;
    private javax.swing.JLabel hsnLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox<String> measuringUnit;
    private javax.swing.JLabel measuringUnitLabel;
    private javax.swing.JLabel productID;
    private javax.swing.JTextField productName;
    private javax.swing.JLabel productNameLabel;
    private static javax.swing.JComboBox<String> productSelector;
    private javax.swing.JTextField purchaseRate;
    private javax.swing.JLabel purchaseRateLabel;
    private javax.swing.JSpinner quantity;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JSpinner safetyStock;
    private javax.swing.JLabel safetyStockLabel;
    private javax.swing.JTextField saleRate;
    private javax.swing.JLabel saleRateLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
