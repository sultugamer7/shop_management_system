/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopmanagementsystem;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Sultan
 */
public class ShopProfileUpdateForm extends javax.swing.JFrame {

    /**
     * Creates new form ShopProfileUpdateForm
     */
    Connection c = null;
    Statement s = null;
    ResultSet rs = null;
    String a1 = "";
    String a2 = "";
    String a3 = "";

    private void clearError() {
        error1.setText("");
        error2.setText("");
        error3.setText("");
        error4.setText("");
    }

    public ShopProfileUpdateForm() {
        initComponents();
        c = DB.java_db();

        //Getting value of id from LoginForm page for database purpose
        String id = LoginForm.id.getText();

        //Setting error msgs to null
        clearError();

        //Setting username from database
        try {
            s = c.createStatement();
            String sql = "SELECT * FROM shop WHERE id=" + id;
            rs = s.executeQuery(sql);
            while (rs.next()) {
                String username1 = rs.getString("username");
                this.usernameLabel.setText(username1);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ShopProfileUpdateForm.this, e);
        } finally {
            try {
                rs.close();
                s.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(ShopProfileUpdateForm.this, e);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        error1 = new javax.swing.JLabel();
        error2 = new javax.swing.JLabel();
        error3 = new javax.swing.JLabel();
        error4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        currentPassword = new javax.swing.JPasswordField();
        newPassword = new javax.swing.JPasswordField();
        confirmPassword = new javax.swing.JPasswordField();
        show1 = new javax.swing.JButton();
        show2 = new javax.swing.JButton();
        show3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("UPDATE SHOP PROFILE");
        setAlwaysOnTop(true);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(138, 43, 226));
        jLabel1.setText("Current Username :");

        jLabel2.setForeground(new java.awt.Color(138, 43, 226));
        jLabel2.setText("Current Password :");

        jLabel3.setForeground(new java.awt.Color(138, 43, 226));
        jLabel3.setText("New Password :");

        jLabel4.setForeground(new java.awt.Color(138, 43, 226));
        jLabel4.setText("Cofirm Password :");

        usernameLabel.setForeground(new java.awt.Color(0, 153, 255));
        usernameLabel.setText("usernameLabel");

        updateButton.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(219, 112, 147));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(219, 112, 147));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        error1.setForeground(new java.awt.Color(255, 0, 0));
        error1.setText("error1");

        error2.setForeground(new java.awt.Color(255, 0, 0));
        error2.setText("error2");

        error3.setForeground(new java.awt.Color(255, 0, 0));
        error3.setText("New Password Must Be Different!");

        error4.setForeground(new java.awt.Color(255, 0, 0));
        error4.setText("error4");

        jLabel5.setForeground(new java.awt.Color(138, 43, 226));
        jLabel5.setText("New Username :");

        show1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        show1.setForeground(new java.awt.Color(219, 112, 147));
        show1.setText("Show");
        show1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show1ActionPerformed(evt);
            }
        });

        show2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        show2.setForeground(new java.awt.Color(219, 112, 147));
        show2.setText("Show");
        show2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show2ActionPerformed(evt);
            }
        });

        show3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        show3.setForeground(new java.awt.Color(219, 112, 147));
        show3.setText("Show");
        show3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(usernameLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(confirmPassword)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(show3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(newPassword)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(show2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(currentPassword)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(show1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(error1)
                                    .addComponent(error2)
                                    .addComponent(error3)
                                    .addComponent(error4)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(usernameLabel))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(show1)
                    .addComponent(currentPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(show2)
                    .addComponent(newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(show3)
                    .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error4))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        //Setting textboxes and error msgs to null
        username.setText("");
        currentPassword.setText("");
        newPassword.setText("");
        confirmPassword.setText("");
        clearError();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        //Will update the shop details

        //Taking all the entered values in their respective strings
        String username1 = this.username.getText();
        String currentPassword1 = this.currentPassword.getText();
        String newPassword1 = this.newPassword.getText();
        String confirmPassword1 = this.confirmPassword.getText();

        //Setting all error msgs to null
        clearError();

        //Duplicate entry validation for username
        int dupFlag = 0;
        try {
            s = c.createStatement();
            String sql = "SELECT * FROM shop";
            rs = s.executeQuery(sql);
            while (rs.next()) {
                String username2 = rs.getString("username");
                if (username1.equals(username2)) {
                    error1.setText("Username Already Exists!");
                    dupFlag = 1;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        } finally {
            try {
                rs.close();
                s.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }

        //Same entry validation for current password
        int sameFlag = 0;
        try {
            s = c.createStatement();
            String id = LoginForm.id.getText();
            String sql = "SELECT * FROM shop WHERE id=" + id;
            rs = s.executeQuery(sql);
            while (rs.next()) {
                String currentPassword = rs.getString("password");
                if (!currentPassword1.equals(currentPassword) && !currentPassword1.equals("")) {
                    error2.setText("Invalid Current Password!");
                    sameFlag = 1;
                } else {
                    sameFlag = 0;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        } finally {
            try {
                rs.close();
                s.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }

        //Password required field validations
        int reqPassFlag = 0;
        int reqPassFlag1, reqPassFlag2, reqPassFlag3, reqPassFlag4;
        reqPassFlag1 = reqPassFlag2 = reqPassFlag3 = reqPassFlag4 = 0;
        try {
            s = c.createStatement();
            String id = LoginForm.id.getText();
            String sql = "SELECT * FROM shop WHERE id=" + id;
            rs = s.executeQuery(sql);
            while (rs.next()) {
                String currentPassword2 = rs.getString("password");
                if (currentPassword1.equals(currentPassword2)) {
                    if (newPassword1.equals("")) {
                        error3.setText("New Password Required!");
                        reqPassFlag1 = 1;
                    } else {
                        reqPassFlag1 = 0;
                        if (newPassword1.equals(currentPassword1)) {
                            error3.setText("New Password Must Be Different!");
                            reqPassFlag2 = 1;
                        } else {
                            reqPassFlag2 = 0;
                            if (confirmPassword1.equals("")) {
                                error4.setText("Please Confirm Your Password!");
                                reqPassFlag3 = 1;
                            } else {
                                reqPassFlag3 = 0;
                                if (!confirmPassword1.equals(newPassword1)) {
                                    error4.setText("Password Doesn't Match!");
                                    reqPassFlag4 = 1;
                                } else {
                                    reqPassFlag4 = 0;
                                }
                            }
                        }
                    }
                }
            }
            if (reqPassFlag1 == 1 || reqPassFlag2 == 1 || reqPassFlag3 == 1 || reqPassFlag4 == 1) {
                reqPassFlag = 1;
            } else {
                reqPassFlag = 0;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        } finally {
            try {
                rs.close();
                s.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }

        //If no field is filled then it will display error msg
        int reqFlag;
        if (username1.equals("") && currentPassword1.equals("") && newPassword1.equals("")
                && confirmPassword1.equals("")) {
            JOptionPane.showMessageDialog(this, "You Have Not Entered Any Values To Be Updated!");
            reqFlag = 1;
        } else {
            reqFlag = 0;
        }

        //Updating data in database only if all the flags are 0
        if (dupFlag == 0 && sameFlag == 0 && reqPassFlag == 0 && reqFlag == 0) {
            int ans = JOptionPane.showConfirmDialog(this, "Update Profile?", "Profile Updation", JOptionPane.YES_NO_OPTION);
            if (ans == 0) {
                try {
                    s = c.createStatement();
                    String id = LoginForm.id.getText();
                    if (!username1.equals("")) {
                        s.executeUpdate("UPDATE shop SET username='" + username1 + "' WHERE id=" + id);
                    }
                    if (!currentPassword1.equals("")) {
                        s.executeUpdate("UPDATE shop SET password='" + newPassword1 + "' WHERE id=" + id);
                    }
                    c.close();
                    JOptionPane.showMessageDialog(this, "Shop updated successfully! Now you'll have to login again!");
                    java.awt.Window win[] = java.awt.Window.getWindows();
                    for (int i = 0; i < win.length; i++) {
                        win[i].dispose();
                    }
                    new LoginForm().setVisible(true);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                } finally {
                    try {
                        s.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e);
                    }
                }
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void show1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show1ActionPerformed
        if (a1.equals("")) {
            currentPassword.setEchoChar((char) 0);
            a1 = "Set";
            show1.setText("Hide");
        } else {
            currentPassword.setEchoChar('*');
            a1 = "";
            show1.setText("Show");
        }
    }//GEN-LAST:event_show1ActionPerformed

    private void show2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show2ActionPerformed
        if (a2.equals("")) {
            newPassword.setEchoChar((char) 0);
            a2 = "Set";
            show2.setText("Hide");
        } else {
            newPassword.setEchoChar('*');
            a2 = "";
            show2.setText("Show");
        }
    }//GEN-LAST:event_show2ActionPerformed

    private void show3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show3ActionPerformed
        if (a3.equals("")) {
            confirmPassword.setEchoChar((char) 0);
            a3 = "Set";
            show3.setText("Hide");
        } else {
            confirmPassword.setEchoChar('*');
            a3 = "";
            show3.setText("Show");
        }
    }//GEN-LAST:event_show3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try {
            // Will dispose ShopUpdateForm
            c.close();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShopProfileUpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShopProfileUpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShopProfileUpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShopProfileUpdateForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShopProfileUpdateForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JPasswordField currentPassword;
    private javax.swing.JLabel error1;
    private javax.swing.JLabel error2;
    private javax.swing.JLabel error3;
    private javax.swing.JLabel error4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JButton show1;
    private javax.swing.JButton show2;
    private javax.swing.JButton show3;
    private javax.swing.JButton updateButton;
    private javax.swing.JTextField username;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
