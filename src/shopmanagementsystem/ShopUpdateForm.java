/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopmanagementsystem;

import javax.swing.JOptionPane;
import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 *
 * @author Sultan
 */
public class ShopUpdateForm extends javax.swing.JFrame {

    /**
     * Creates new form ShopUpdateForm
     */
    Connection c = null;
    Statement s = null;
    ResultSet rs = null;

    private void clearError() {
        error1.setText("");
        error2.setText("");
        error3.setText("");
        error4.setText("");
        error5.setText("");
        error6.setText("");
        error7.setText("");
        error8.setText("");
        error9.setText("");
        error10.setText("");
        error11.setText("");
        error12.setText("");
        error13.setText("");
        error14.setText("");
        error15.setText("");
    }

    public ShopUpdateForm() {
        initComponents();
        c = DB.java_db();

        //Getting value of id from LoginForm page for database purpose
        String id = LoginForm.id.getText();

        //Setting error msgs to null
        clearError();

        //Setting all the values in current values field from database
        try {
            s = c.createStatement();
            String sql = "SELECT * FROM shop WHERE id=" + id;
            rs = s.executeQuery(sql);
            while (rs.next()) {
                String firstName2 = rs.getString("firstName");
                String middleName2 = rs.getString("middleName");
                String lastName2 = rs.getString("lastName");
                String shopName2 = rs.getString("shopName");
                String streetAddress2 = rs.getString("streetAddress");
                String city2 = rs.getString("city");
                String state2 = rs.getString("state");
                String email2 = rs.getString("email");
                String phone2 = rs.getString("phone");
                String mobile2 = rs.getString("mobile");
                String gstin2 = rs.getString("gstin");
                String bankName2 = rs.getString("bankName");
                String bankBranch2 = rs.getString("bankBranch");
                String bankAcNumber2 = rs.getString("bankAcNumber");
                String bankIFSC2 = rs.getString("bankIFSC");

                this.firstNameLabel.setText(firstName2.toUpperCase());
                this.middleNameLabel.setText(middleName2.toUpperCase());
                this.lastNameLabel.setText(lastName2.toUpperCase());
                this.shopNameLabel.setText(shopName2.toUpperCase());
                this.streetAddressLabel.setText(streetAddress2.toUpperCase());
                this.cityLabel.setText(city2.toUpperCase());
                this.stateLabel.setText(state2.toUpperCase());
                this.emailLabel.setText(email2.toUpperCase());
                this.phoneLabel.setText(phone2);
                this.mobileLabel.setText(mobile2);
                this.gstinLabel.setText(gstin2.toUpperCase());
                this.bankNameLabel.setText(bankName2.toUpperCase());
                this.bankBranchLabel.setText(bankBranch2.toUpperCase());
                this.bankAcNumberLabel.setText(bankAcNumber2);
                this.bankIFSCLabel.setText(bankIFSC2.toUpperCase());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(ShopUpdateForm.this, e);
        } finally {
            try {
                rs.close();
                s.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(ShopUpdateForm.this, e);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        error3 = new javax.swing.JLabel();
        error4 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        middleName = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        shopName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        error1 = new javax.swing.JLabel();
        error2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        error5 = new javax.swing.JLabel();
        error7 = new javax.swing.JLabel();
        error8 = new javax.swing.JLabel();
        error9 = new javax.swing.JLabel();
        error10 = new javax.swing.JLabel();
        error11 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        error12 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        error13 = new javax.swing.JLabel();
        mobile = new javax.swing.JTextField();
        error14 = new javax.swing.JLabel();
        gstin = new javax.swing.JTextField();
        bankName = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        bankBranch = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        bankAcNumber = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        bankIFSC = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        currentValues = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        middleNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        shopNameLabel = new javax.swing.JLabel();
        streetAddressLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        mobileLabel = new javax.swing.JLabel();
        gstinLabel = new javax.swing.JLabel();
        bankNameLabel = new javax.swing.JLabel();
        bankBranchLabel = new javax.swing.JLabel();
        bankAcNumberLabel = new javax.swing.JLabel();
        bankIFSCLabel = new javax.swing.JLabel();
        newValues = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        stateLabel = new javax.swing.JLabel();
        state = new javax.swing.JComboBox<>();
        error6 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        streetAddress = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cityLabel = new javax.swing.JLabel();
        city = new javax.swing.JTextField();
        error15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("UPDATE SHOP");
        setAlwaysOnTop(true);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        error3.setForeground(new java.awt.Color(255, 0, 0));
        error3.setText("error3");

        error4.setForeground(new java.awt.Color(255, 0, 0));
        error4.setText("error4");

        firstName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                firstNameCaretUpdate(evt);
            }
        });

        middleName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                middleNameCaretUpdate(evt);
            }
        });

        lastName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                lastNameCaretUpdate(evt);
            }
        });

        shopName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                shopNameCaretUpdate(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(138, 43, 226));
        jLabel2.setText("Middle Name :");

        jLabel3.setForeground(new java.awt.Color(138, 43, 226));
        jLabel3.setText("Last Name :");

        jLabel4.setForeground(new java.awt.Color(138, 43, 226));
        jLabel4.setText("Shop Name :");

        jLabel1.setForeground(new java.awt.Color(138, 43, 226));
        jLabel1.setText("First Name :");

        error1.setForeground(new java.awt.Color(255, 0, 0));
        error1.setText("error1");

        error2.setForeground(new java.awt.Color(255, 0, 0));
        error2.setText("error2");

        jLabel13.setForeground(new java.awt.Color(138, 43, 226));
        jLabel13.setText("Bank A/c Number :");

        jLabel14.setForeground(new java.awt.Color(138, 43, 226));
        jLabel14.setText("Bank IFSC :");

        error5.setForeground(new java.awt.Color(255, 0, 0));
        error5.setText("error5");

        error7.setForeground(new java.awt.Color(255, 0, 0));
        error7.setText("error7");

        error8.setForeground(new java.awt.Color(255, 0, 0));
        error8.setText("error8");

        error9.setForeground(new java.awt.Color(255, 0, 0));
        error9.setText("error9");

        error10.setForeground(new java.awt.Color(255, 0, 0));
        error10.setText("error10");

        error11.setForeground(new java.awt.Color(255, 0, 0));
        error11.setText("error11");

        email.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                emailCaretUpdate(evt);
            }
        });
        email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFocusLost(evt);
            }
        });

        error12.setForeground(new java.awt.Color(255, 0, 0));
        error12.setText("error12");

        phone.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                phoneCaretUpdate(evt);
            }
        });
        phone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                phoneFocusLost(evt);
            }
        });

        error13.setForeground(new java.awt.Color(255, 0, 0));
        error13.setText("error13");

        mobile.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                mobileCaretUpdate(evt);
            }
        });
        mobile.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                mobileFocusLost(evt);
            }
        });

        error14.setForeground(new java.awt.Color(255, 0, 0));
        error14.setText("error14");

        gstin.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                gstinCaretUpdate(evt);
            }
        });
        gstin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                gstinFocusLost(evt);
            }
        });

        bankName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "IDBI Bank", "Urban Bank", "ICICI Bank" }));
        bankName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bankNameItemStateChanged(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(138, 43, 226));
        jLabel5.setText("Street Address :");

        bankBranch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Dapoli", "Khed", "Chiplun" }));
        bankBranch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bankBranchItemStateChanged(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(138, 43, 226));
        jLabel7.setText("E-Mail :");

        bankAcNumber.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                bankAcNumberCaretUpdate(evt);
            }
        });
        bankAcNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bankAcNumberFocusLost(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(138, 43, 226));
        jLabel8.setText("Phone Number :");

        bankIFSC.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                bankIFSCCaretUpdate(evt);
            }
        });
        bankIFSC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bankIFSCFocusLost(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(138, 43, 226));
        jLabel9.setText("Mobile Number :");

        jLabel10.setForeground(new java.awt.Color(138, 43, 226));
        jLabel10.setText("GSTIN :");

        jLabel11.setForeground(new java.awt.Color(138, 43, 226));
        jLabel11.setText("Bank Name :");

        jLabel12.setForeground(new java.awt.Color(138, 43, 226));
        jLabel12.setText("Bank Branch :");

        currentValues.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        currentValues.setForeground(new java.awt.Color(0, 153, 255));
        currentValues.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentValues.setText("Current Values");

        firstNameLabel.setForeground(new java.awt.Color(0, 153, 255));
        firstNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstNameLabel.setText("firstNameLabel");

        middleNameLabel.setForeground(new java.awt.Color(0, 153, 255));
        middleNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        middleNameLabel.setText("middleNameLabel");

        lastNameLabel.setForeground(new java.awt.Color(0, 153, 255));
        lastNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastNameLabel.setText("lastNameLabel");

        shopNameLabel.setForeground(new java.awt.Color(0, 153, 255));
        shopNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shopNameLabel.setText("shopNameLabel");

        streetAddressLabel.setForeground(new java.awt.Color(0, 153, 255));
        streetAddressLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        streetAddressLabel.setText("streetAddressLabel");

        emailLabel.setForeground(new java.awt.Color(0, 153, 255));
        emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emailLabel.setText("emailLabel");

        phoneLabel.setForeground(new java.awt.Color(0, 153, 255));
        phoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        phoneLabel.setText("phoneLabel");

        mobileLabel.setForeground(new java.awt.Color(0, 153, 255));
        mobileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mobileLabel.setText("mobileLabel");

        gstinLabel.setForeground(new java.awt.Color(0, 153, 255));
        gstinLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gstinLabel.setText("gstinLabel");

        bankNameLabel.setForeground(new java.awt.Color(0, 153, 255));
        bankNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bankNameLabel.setText("bankNameLabel");

        bankBranchLabel.setForeground(new java.awt.Color(0, 153, 255));
        bankBranchLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bankBranchLabel.setText("bankBranchLabel");

        bankAcNumberLabel.setForeground(new java.awt.Color(0, 153, 255));
        bankAcNumberLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bankAcNumberLabel.setText("bankAcNumberLabel");

        bankIFSCLabel.setForeground(new java.awt.Color(0, 153, 255));
        bankIFSCLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bankIFSCLabel.setText("bankIFSCLabel");

        newValues.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        newValues.setForeground(new java.awt.Color(255, 153, 153));
        newValues.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newValues.setText("Values To Be Updated");

        jLabel6.setForeground(new java.awt.Color(138, 43, 226));
        jLabel6.setText("State :");

        stateLabel.setForeground(new java.awt.Color(0, 153, 255));
        stateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stateLabel.setText("stateLabel");

        state.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Jammu & Kashmir", "Himachal Pradesh", "Punjab", "Chandigarh", "Uttarakhand", "Haryana", "Delhi", "Rajasthan", "Uttar Pradesh", "Bihar", "Sikkim", "Arunachal Pradesh", "Nagaland", "Manipur", "Mizoram", "Tripura", "Meghalaya", "Assam", "West Bengal", "Jharkhand", "Orissa", "Chhattisgarh", "Madhya Pradesh", "Gujarat", "Daman & Diu", "Dadra & Nagar Haveli", "Maharashtra", "Andhra Pradesh", "Karnataka", "Goa", "Lakshadweep", "Kerala", "Tamil Nadu", "Puducherry", "Andaman & Nicobar Islands", "Telengana", "Andrapradesh(New)" }));
        state.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stateItemStateChanged(evt);
            }
        });

        error6.setForeground(new java.awt.Color(255, 0, 0));
        error6.setText("error6");

        updateButton.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        updateButton.setForeground(new java.awt.Color(219, 112, 147));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(219, 112, 147));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        streetAddress.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                streetAddressCaretUpdate(evt);
            }
        });

        jLabel15.setForeground(new java.awt.Color(138, 43, 226));
        jLabel15.setText("City :");

        cityLabel.setForeground(new java.awt.Color(0, 153, 255));
        cityLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cityLabel.setText("cityLabel");

        city.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                cityCaretUpdate(evt);
            }
        });

        error15.setForeground(new java.awt.Color(255, 0, 0));
        error15.setText("error15");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bankIFSCLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cityLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(currentValues, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(firstNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(middleNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(lastNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(shopNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(emailLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(phoneLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(mobileLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(gstinLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(bankNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(bankBranchLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(bankAcNumberLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(streetAddressLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                    .addComponent(stateLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(shopName, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                                .addComponent(streetAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(error6)
                                            .addComponent(error4)
                                            .addComponent(error5)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(error7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bankAcNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(error14))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bankBranch, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(error13))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bankName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(error12))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(gstin, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(error11))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(error10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(error9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(error8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(error1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bankIFSC, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(error15))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(lastName, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                            .addComponent(middleName, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(error2)
                                            .addComponent(error3)))
                                    .addComponent(newValues, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 240, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(412, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentValues)
                    .addComponent(newValues))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(firstNameLabel)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(middleNameLabel)
                    .addComponent(middleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lastNameLabel)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(shopNameLabel)
                    .addComponent(shopName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streetAddressLabel)
                    .addComponent(streetAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error5)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cityLabel)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(stateLabel)
                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailLabel)
                    .addComponent(jLabel7)
                    .addComponent(error8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(phoneLabel)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(mobileLabel)
                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(gstinLabel)
                    .addComponent(gstin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(bankNameLabel)
                    .addComponent(bankName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(bankBranchLabel)
                    .addComponent(bankBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(bankAcNumberLabel)
                    .addComponent(bankAcNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(bankIFSCLabel)
                    .addComponent(bankIFSC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error15))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void firstNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_firstNameCaretUpdate
        //Will display error msg if number added in name
        error1.setText("");
        String firstName1 = this.firstName.getText();
        Pattern p = Pattern.compile("^[a-zA-Z\\s]*$");
        Matcher m = p.matcher(firstName1);
        if (!m.matches()) {
            error1.setText("Invalid First Name!");
        }
    }//GEN-LAST:event_firstNameCaretUpdate

    private void middleNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_middleNameCaretUpdate
        //Will display error msg if number added in name
        error2.setText("");
        String middleName1 = this.middleName.getText();
        Pattern p = Pattern.compile("^[a-zA-Z\\s]*$");
        Matcher m = p.matcher(middleName1);
        if (!m.matches()) {
            error2.setText("Invalid Middle Name!");
        }
    }//GEN-LAST:event_middleNameCaretUpdate

    private void lastNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_lastNameCaretUpdate
        //Will display error msg if number added in name
        error3.setText("");
        String lastName1 = this.lastName.getText();
        Pattern p = Pattern.compile("^[a-zA-Z\\s]*$");
        Matcher m = p.matcher(lastName1);
        if (!m.matches()) {
            error3.setText("Invalid Last Name!");
        }
    }//GEN-LAST:event_lastNameCaretUpdate

    private void shopNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_shopNameCaretUpdate
        //Will remove error msg on clicking this field if error already exists
        error4.setText("");
    }//GEN-LAST:event_shopNameCaretUpdate

    private void emailCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_emailCaretUpdate
        //Will remove error msg on clicking this field if error already exists
        error8.setText("");
    }//GEN-LAST:event_emailCaretUpdate

    private void phoneCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_phoneCaretUpdate
        //Will remove error msg on clicking this field if error already exists
        error9.setText("");
    }//GEN-LAST:event_phoneCaretUpdate

    private void mobileCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_mobileCaretUpdate
        //Will remove error msg on clicking this field if error already exists
        error10.setText("");
    }//GEN-LAST:event_mobileCaretUpdate

    private void gstinCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_gstinCaretUpdate
        //Will remove error msg on clicking this field if error already exists
        error11.setText("");
    }//GEN-LAST:event_gstinCaretUpdate

    private void bankAcNumberCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_bankAcNumberCaretUpdate
        //Will remove error msg on clicking this field if error already exists
        error12.setText("");
    }//GEN-LAST:event_bankAcNumberCaretUpdate

    private void bankIFSCCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_bankIFSCCaretUpdate
        //Will remove error msg on clicking this field if error already exists
        error13.setText("");
    }//GEN-LAST:event_bankIFSCCaretUpdate

    private void stateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stateItemStateChanged
        //Will remove error msg after selectin an item if it already exists
        this.error7.setText("");
    }//GEN-LAST:event_stateItemStateChanged

    private void bankNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bankNameItemStateChanged
        //Will remove error msg after selectin an item if it already exists
        this.error12.setText("");
    }//GEN-LAST:event_bankNameItemStateChanged

    private void bankBranchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bankBranchItemStateChanged
        //Will remove error msg after selectin an item if it already exists
        this.error13.setText("");
    }//GEN-LAST:event_bankBranchItemStateChanged

    private void emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusLost
        //Will display error msg after focus has been lost if wrong email address is entered
        error8.setText("");
        String email1 = this.email.getText();
        Pattern p = Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$|^$", Pattern.CASE_INSENSITIVE);
        Matcher m = p.matcher(email1);
        if (!m.matches()) {
            error8.setText("Invalid E-Mail Address!");
        }
    }//GEN-LAST:event_emailFocusLost

    private void phoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneFocusLost
        //Will display error msg after focus has been lost if wrong phone number is entered
        error9.setText("");
        String phone1 = this.phone.getText();
        Pattern p = Pattern.compile("\\d{11}|\\(\\d{5}\\)\\d{6}|(?:\\d{5}-)\\d{6}|^$");
        Matcher m = p.matcher(phone1);
        if (!m.matches()) {
            error9.setText("Invalid Phone Number!");
        }
    }//GEN-LAST:event_phoneFocusLost

    private void mobileFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mobileFocusLost
        //Will display error msg after focus has been lost if wrong mobile number is entered
        error10.setText("");
        String mobile1 = this.mobile.getText();
        Pattern p = Pattern.compile("^[6-9]\\d{9}$|^$");
        Matcher m = p.matcher(mobile1);
        if (!m.matches()) {
            error10.setText("Invalid Mobile Number!");
        }
    }//GEN-LAST:event_mobileFocusLost

    private void gstinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_gstinFocusLost
        //Will display error msg after focus has been lost if wrong gstin is entered
        error11.setText("");
        String gstin1 = this.gstin.getText();
        Pattern p = Pattern.compile("^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{3}$|^$");
        Matcher m = p.matcher(gstin1);
        if (!m.matches()) {
            error11.setText("Invalid GSTIN!");
        }
    }//GEN-LAST:event_gstinFocusLost

    private void bankAcNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bankAcNumberFocusLost
        //Will display error msg after focus has been lost if wrong bank a/c number is entered
        error14.setText("");
        String bankAcNumber1 = this.bankAcNumber.getText();
        Pattern p = Pattern.compile("^\\d{9,18}$|^$");
        Matcher m = p.matcher(bankAcNumber1);
        if (!m.matches()) {
            error14.setText("Invalid Bank Account Number!");
        }
    }//GEN-LAST:event_bankAcNumberFocusLost

    private void bankIFSCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bankIFSCFocusLost
        //Will display error msg after focus has been lost if wrong bank ifsc is entered
        error15.setText("");
        String bankIFSC1 = this.bankIFSC.getText();
        Pattern p = Pattern.compile("^[A-Za-z]{4}[a-zA-Z0-9]{7}$|^$");
        Matcher m = p.matcher(bankIFSC1);
        if (!m.matches()) {
            error15.setText("Invalid Bank IFSC!");
        }
    }//GEN-LAST:event_bankIFSCFocusLost

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        //Will update the shop details

        //Taking all the entered values in their respective strings
        String firstName1 = this.firstName.getText();
        String middleName1 = this.middleName.getText();
        String lastName1 = this.lastName.getText();
        String shopName1 = this.shopName.getText();
        String streetAddress1 = this.streetAddress.getText();
        String city1 = this.city.getText();
        String state1 = this.state.getSelectedItem().toString();
        String email1 = this.email.getText();
        String phone1 = this.phone.getText();
        String mobile1 = this.mobile.getText();
        String gstin1 = this.gstin.getText();
        String bankName1 = this.bankName.getSelectedItem().toString();
        String bankBranch1 = this.bankBranch.getSelectedItem().toString();
        String bankAcNumber1 = this.bankAcNumber.getText();
        String bankIFSC1 = this.bankIFSC.getText();

        //Setting all error msgs to null
        clearError();

        //Regular expression validations
        int regFlag;
        int regFlag1, regFlag2, regFlag3, regFlag4, regFlag5, regFlag6, regFlag7, regFlag8, regFlag9, regFlag10;
        Pattern namePattern = Pattern.compile("^[a-zA-Z\\s]*$");
        Pattern cityPattern = Pattern.compile("^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$|^$");
        Pattern emailPattern = Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$|^$", Pattern.CASE_INSENSITIVE);
        Pattern phonePattern = Pattern.compile("\\d{11}|\\(\\d{5}\\)\\d{6}|(?:\\d{5}-)\\d{6}|^$");
        Pattern mobilePattern = Pattern.compile("^[6-9]\\d{9}$|^$");
        Pattern gstinPattern = Pattern.compile("^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{3}$|^$");
        Pattern bankAcNumberPattern = Pattern.compile("^\\d{9,18}$|^$");
        Pattern bankIFSCPattern = Pattern.compile("^[A-Za-z]{4}[a-zA-Z0-9]{7}$|^$");
        Matcher firstNameMatcher = namePattern.matcher(firstName1);
        if (!firstNameMatcher.matches()) {
            error1.setText("Invalid First Name!");
            regFlag1 = 1;
        } else {
            regFlag1 = 0;
        }
        Matcher middleNameMatcher = namePattern.matcher(middleName1);
        if (!middleNameMatcher.matches()) {
            error2.setText("Invalid Middle Name!");
            regFlag2 = 1;
        } else {
            regFlag2 = 0;
        }
        Matcher lastNameMatcher = namePattern.matcher(lastName1);
        if (!lastNameMatcher.matches()) {
            error3.setText("Invalid Last Name!");
            regFlag3 = 1;
        } else {
            regFlag3 = 0;
        }
        Matcher cityMatcher = cityPattern.matcher(city1);
        if (!cityMatcher.matches()) {
            error6.setText("Invalid City Name!");
            regFlag4 = 1;
        } else {
            regFlag4 = 0;
        }
        Matcher emailMatcher = emailPattern.matcher(email1);
        if (!emailMatcher.matches()) {
            error8.setText("Invalid E-Mail Address!");
            regFlag5 = 1;
        } else {
            regFlag5 = 0;
        }
        Matcher phoneNumberMatcher = phonePattern.matcher(phone1);
        if (!phoneNumberMatcher.matches()) {
            error9.setText("Invalid Phone Number!");
            regFlag6 = 1;
        } else {
            regFlag6 = 0;
        }
        Matcher mobileNumberMatcher = mobilePattern.matcher(mobile1);
        if (!mobileNumberMatcher.matches()) {
            error10.setText("Invalid Mobile Number!");
            regFlag7 = 1;
        } else {
            regFlag7 = 0;
        }
        Matcher gstinMatcher = gstinPattern.matcher(gstin1);
        if (!gstinMatcher.matches()) {
            error11.setText("Invalid GSTIN!");
            regFlag8 = 1;
        } else {
            regFlag8 = 0;
        }
        Matcher bankAcNumberMatcher = bankAcNumberPattern.matcher(bankAcNumber1);
        if (!bankAcNumberMatcher.matches()) {
            error14.setText("Invalid Bank Account Number!");
            regFlag9 = 1;
        } else {
            regFlag9 = 0;
        }
        Matcher bankIFSCMatcher = bankIFSCPattern.matcher(bankIFSC1);
        if (!bankIFSCMatcher.matches()) {
            error15.setText("Invalid Bank IFSC!");
            regFlag10 = 1;
        } else {
            regFlag10 = 0;
        }
        if (regFlag1 == 1 || regFlag2 == 1 || regFlag3 == 1 || regFlag4 == 1
                || regFlag5 == 1 || regFlag6 == 1 || regFlag7 == 1 || regFlag8 == 1 || regFlag9 == 1 || regFlag10 == 1) {
            regFlag = 1;
        } else {
            regFlag = 0;
        }

        //Duplicate entries validations for unique values
        int dupFlag = 0;
        int dupFlag1, dupFlag2, dupFlag3 = 0, dupFlag4, dupFlag5, dupFlag6, dupFlag7;
        try {
            s = c.createStatement();
            String sql = "SELECT * FROM shop";
            rs = s.executeQuery(sql);
            while (rs.next()) {
                String shopName2 = rs.getString("shopName");
                String email2 = rs.getString("email");
                String phone2 = rs.getString("phone");
                String mobile2 = rs.getString("mobile");
                String gstin2 = rs.getString("gstin");
                String bankAcNumber2 = rs.getString("bankAcNumber");
                String bankIFSC2 = rs.getString("bankIFSC");
                if (shopName1.equalsIgnoreCase(shopName2)) {
                    error4.setText("Shop Name Already Exists!");
                    dupFlag1 = 1;
                } else {
                    dupFlag1 = 0;
                }
                if (email1.equalsIgnoreCase(email2)) {
                    error8.setText("E-Mail Already Exists!");
                    dupFlag2 = 1;
                } else {
                    dupFlag2 = 0;
                }
                if (!phone1.equals("")) {
                    if (phone1.equals(phone2)) {
                        error9.setText("Phone Number Already Exists!");
                        dupFlag3 = 1;
                    } else {
                        dupFlag3 = 0;
                    }
                }
                if (mobile1.equals(mobile2)) {
                    error10.setText("Mobile Number Already Exists!");
                    dupFlag4 = 1;
                } else {
                    dupFlag4 = 0;
                }
                if (gstin1.equalsIgnoreCase(gstin2)) {
                    error11.setText("GSTIN Already Exists!");
                    dupFlag5 = 1;
                } else {
                    dupFlag5 = 0;
                }
                if (bankAcNumber1.equals(bankAcNumber2)) {
                    error14.setText("Bank Account Number Already Exists!");
                    dupFlag6 = 1;
                } else {
                    dupFlag6 = 0;
                }
                if (bankIFSC1.equalsIgnoreCase(bankIFSC2)) {
                    error15.setText("Bank IFSC Already Exists!");
                    dupFlag7 = 1;
                } else {
                    dupFlag7 = 0;
                }
                if (dupFlag1 == 1 || dupFlag2 == 1 || dupFlag3 == 1 || dupFlag4 == 1
                        || dupFlag5 == 1 || dupFlag6 == 1 || dupFlag7 == 1) {
                    dupFlag = 1;
                    break;
                } else {
                    dupFlag = 0;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        } finally {
            try {
                rs.close();
                s.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }

        //Duplicate entry validation for non-unique values
        int dupnFlag = 0;
        int dupnFlag1, dupnFlag2, dupnFlag3, dupnFlag4 = 0, dupnFlag5, dupnFlag6, dupnFlag7, dupnFlag8;
        try {
            s = c.createStatement();
            String id = LoginForm.id.getText();
            String sql = "SELECT * FROM shop WHERE id=" + id;
            rs = s.executeQuery(sql);
            while (rs.next()) {
                String firstName2 = rs.getString("firstName");
                String middleName2 = rs.getString("middleName");
                String lastName2 = rs.getString("lastName");
                String streetAddress2 = rs.getString("streetAddress");
                String city2 = rs.getString("city");
                String state2 = rs.getString("state");
                String bankName2 = rs.getString("bankName");
                String bankBranch2 = rs.getString("bankBranch");
                if (firstName1.equalsIgnoreCase(firstName2)) {
                    error1.setText("First Name Already Exists!");
                    dupnFlag1 = 1;
                } else {
                    dupnFlag1 = 0;
                }
                if (middleName1.equalsIgnoreCase(middleName2)) {
                    error2.setText("Middle Name Already Exists!");
                    dupnFlag2 = 1;
                } else {
                    dupnFlag2 = 0;
                }
                if (lastName1.equalsIgnoreCase(lastName2)) {
                    error3.setText("Last Name Already Exists!");
                    dupnFlag3 = 1;
                } else {
                    dupnFlag3 = 0;
                }
                if (!streetAddress1.equals("")) {
                    if (streetAddress1.equalsIgnoreCase(streetAddress2)) {
                        error5.setText("Address Already Exists!");
                        dupnFlag4 = 1;
                    } else {
                        dupnFlag4 = 0;
                    }
                }
                if (city1.equalsIgnoreCase(city2)) {
                    error6.setText("City Name Already Exists!");
                    dupnFlag5 = 1;
                } else {
                    dupnFlag5 = 0;
                }
                if (state1.equalsIgnoreCase(state2)) {
                    error7.setText("State Already Selected!");
                    dupnFlag6 = 1;
                } else {
                    dupnFlag6 = 0;
                }
                if (bankName1.equalsIgnoreCase(bankName2)) {
                    error12.setText("Bank Account Number Already Exists!");
                    dupnFlag7 = 1;
                } else {
                    dupnFlag7 = 0;
                }
                if (bankBranch1.equalsIgnoreCase(bankBranch2)) {
                    error13.setText("Bank IFSC Already Exists!");
                    dupnFlag8 = 1;
                } else {
                    dupnFlag8 = 0;
                }
                if (dupnFlag1 == 1 || dupnFlag2 == 1 || dupnFlag3 == 1 || dupnFlag4 == 1
                        || dupnFlag5 == 1 || dupnFlag6 == 1 || dupnFlag7 == 1 || dupnFlag8 == 1) {
                    dupnFlag = 1;
                } else {
                    dupnFlag = 0;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        } finally {
            try {
                rs.close();
                s.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e);
            }
        }

        //If no field is filled then it will display error msg
        int reqFlag;
        if (firstName1.equals("") && middleName1.equals("") && lastName1.equals("")
                && shopName1.equals("") && streetAddress1.equals("") && city1.equals("") && state1.equals(" ")
                && email1.equals("") && phone1.equals("") && mobile1.equals("") && gstin1.equals("")
                && bankName1.equals(" ") && bankBranch1.equals(" ") && bankAcNumber1.equals("")
                && bankIFSC1.equals("")) {
            reqFlag = 1;
            JOptionPane.showMessageDialog(this, "You have not entered any values to be updated!");
        } else {
            reqFlag = 0;
        }

        //Updating data in database only if all the flags are 0
        if (regFlag == 0 && dupFlag == 0 && dupnFlag == 0 && reqFlag == 0) {
            int ans = JOptionPane.showConfirmDialog(this, "Update Shop?", "Shop Updation", JOptionPane.YES_NO_OPTION);
            if (ans == 0) {
                try {
                    s = c.createStatement();
                    String id = LoginForm.id.getText();
                    if (!firstName1.equals("")) {
                        s.executeUpdate("UPDATE shop SET firstName='" + firstName1 + "' WHERE id=" + id);
                    }
                    if (!middleName1.equals("")) {
                        s.executeUpdate("UPDATE shop SET middleName='" + middleName1 + "' WHERE id=" + id);
                    }
                    if (!lastName1.equals("")) {
                        s.executeUpdate("UPDATE shop SET lastName='" + lastName1 + "' WHERE id=" + id);
                    }
                    if (!shopName1.equals("")) {
                        s.executeUpdate("UPDATE shop SET shopName='" + shopName1 + "' WHERE id=" + id);
                    }
                    if (!streetAddress1.equals("")) {
                        s.executeUpdate("UPDATE shop SET streetAddress='" + streetAddress1 + "' WHERE id=" + id);
                    }
                    if (!city1.equals("")) {
                        s.executeUpdate("UPDATE shop SET city='" + city1 + "' WHERE id=" + id);
                    }
                    if (!state1.equals(" ")) {
                        s.executeUpdate("UPDATE shop SET state='" + state1 + "' WHERE id=" + id);
                    }
                    if (!email1.equals("")) {
                        s.executeUpdate("UPDATE shop SET email='" + email1 + "' WHERE id=" + id);
                    }
                    if (!phone1.equals("")) {
                        s.executeUpdate("UPDATE shop SET phone='" + phone1 + "' WHERE id=" + id);
                    }
                    if (!mobile1.equals("")) {
                        s.executeUpdate("UPDATE shop SET mobile='" + mobile1 + "' WHERE id=" + id);
                    }
                    if (!gstin1.equals("")) {
                        s.executeUpdate("UPDATE shop SET gstin='" + gstin1 + "' WHERE id=" + id);
                    }
                    if (!bankName1.equals(" ")) {
                        s.executeUpdate("UPDATE shop SET bankName='" + bankName1 + "' WHERE id=" + id);
                    }
                    if (!bankBranch1.equals(" ")) {
                        s.executeUpdate("UPDATE shop SET bankBranch='" + bankBranch1 + "' WHERE id=" + id);
                    }
                    if (!bankAcNumber1.equals("")) {
                        s.executeUpdate("UPDATE shop SET bankAcNumber='" + bankAcNumber1 + "' WHERE id=" + id);
                    }
                    if (!bankIFSC1.equals("")) {
                        s.executeUpdate("UPDATE shop SET bankIFSC='" + bankIFSC1 + "' WHERE id=" + id);
                    }
                    JOptionPane.showMessageDialog(this, "Shop Successfully Updated!");
                    c.close();
                    new ShopUpdateForm().setVisible(true);
                    this.dispose();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e);
                } finally {
                    try {
                        s.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e);
                    }
                }
            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        //Setting textboxes, comboboxes and error msgs to null
        firstName.setText("");
        middleName.setText("");
        lastName.setText("");
        shopName.setText("");
        streetAddress.setText("");
        city.setText("");
        state.setSelectedItem(" ");
        email.setText("");
        phone.setText("");
        mobile.setText("");
        gstin.setText("");
        bankName.setSelectedItem(" ");
        bankBranch.setSelectedItem(" ");
        bankAcNumber.setText("");
        bankIFSC.setText("");
        clearError();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void cityCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_cityCaretUpdate
        // TODO add your handling code here:
        error6.setText("");
        String city1 = this.city.getText();
        Pattern p = Pattern.compile("^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$|^$");
        Matcher m = p.matcher(city1);
        if (!m.matches()) {
            error6.setText("Invalid City Name!");
        }
    }//GEN-LAST:event_cityCaretUpdate

    private void streetAddressCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_streetAddressCaretUpdate
        // TODO add your handling code here:
        this.error5.setText("");
    }//GEN-LAST:event_streetAddressCaretUpdate

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try {
            // Will dispose ShopUpdateForm
            c.close();
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShopUpdateForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShopUpdateForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShopUpdateForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShopUpdateForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShopUpdateForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bankAcNumber;
    private javax.swing.JLabel bankAcNumberLabel;
    private javax.swing.JComboBox<String> bankBranch;
    private javax.swing.JLabel bankBranchLabel;
    private javax.swing.JTextField bankIFSC;
    private javax.swing.JLabel bankIFSCLabel;
    private javax.swing.JComboBox<String> bankName;
    private javax.swing.JLabel bankNameLabel;
    private javax.swing.JTextField city;
    private javax.swing.JLabel cityLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel currentValues;
    private javax.swing.JTextField email;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel error1;
    private javax.swing.JLabel error10;
    private javax.swing.JLabel error11;
    private javax.swing.JLabel error12;
    private javax.swing.JLabel error13;
    private javax.swing.JLabel error14;
    private javax.swing.JLabel error15;
    private javax.swing.JLabel error2;
    private javax.swing.JLabel error3;
    private javax.swing.JLabel error4;
    private javax.swing.JLabel error5;
    private javax.swing.JLabel error6;
    private javax.swing.JLabel error7;
    private javax.swing.JLabel error8;
    private javax.swing.JLabel error9;
    private javax.swing.JTextField firstName;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField gstin;
    private javax.swing.JLabel gstinLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lastName;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField middleName;
    private javax.swing.JLabel middleNameLabel;
    private javax.swing.JTextField mobile;
    private javax.swing.JLabel mobileLabel;
    private javax.swing.JLabel newValues;
    private javax.swing.JTextField phone;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField shopName;
    private javax.swing.JLabel shopNameLabel;
    private javax.swing.JComboBox<String> state;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JTextField streetAddress;
    private javax.swing.JLabel streetAddressLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
